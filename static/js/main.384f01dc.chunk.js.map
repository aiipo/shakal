{"version":3,"sources":["components/header/header.jsx","constants/routes.js","components/button/button.jsx","constants/event-types.js","components/result-preview/result-preview.jsx","components/upload-image/upload-image.jsx","components/app/App.jsx","constants/core.js","reportWebVitals.js","index.jsx"],"names":["Header","className","to","Button","children","type","onClick","disabled","attrs","Tag","href","Link","event","preventDefault","EVENT_TYPES","ESC","ResultPreview","React","forwardRef","parentRef","elements","clear","containerRef","useRef","useEffect","handleKeyUp","key","window","addEventListener","removeEventListener","length","current","createPortal","target","contains","ref","tabIndex","map","ind","accuracy","person","UploadImage","serverUrl","formRef","selectRef","imageEditorRef","useState","previews","setPreviews","editingImage","setEditingImage","results","setResults","handleChange","stopPropagation","files","dataTransfer","file","startsWith","find","el","name","reader","FileReader","image","result","prevState","readAsDataURL","onSubmit","superagent","post","send","images","then","res","body","catch","err","console","log","onDrop","onDragOver","data","imageEditorInst","toDataURL","changedImage","filter","click","multiple","accept","onChange","handleRemovePreview","src","alt","includeUI","loadImage","path","menu","usageStatistics","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.384f01dc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ROOT_ROUTE } from \"../../constants/routes\";\r\nimport \"./header.scss\";\r\n\r\nconst Header = () => (\r\n  <header className=\"header\">\r\n    <div className=\"wrapper\">\r\n      <Link to={ROOT_ROUTE}>\r\n        <h1>SHAKAL</h1>\r\n      </Link>\r\n    </div>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","export const ROOT_ROUTE = '/';\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './button.scss';\r\n\r\nfunction Button({\r\n  children,\r\n  className = '',\r\n  type = \"button\",\r\n  onClick = () => {},\r\n  disabled = false,\r\n  ...attrs\r\n}) {\r\n  const handleClick = (event) => disabled ? event.preventDefault() : onClick();\r\n\r\n  const Tag = attrs.href ? Link : 'button';\r\n\r\n  return (\r\n    <Tag\r\n      className={`button ${className}`}\r\n      onClick={handleClick}\r\n      disabled={disabled}\r\n      type={type}\r\n      to={attrs.href}\r\n      {...attrs}\r\n    >\r\n      {children}\r\n    </Tag>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","const EVENT_TYPES = {\n  ESC: 'Escape'\n};\n\nexport default EVENT_TYPES;\n","import React, { useEffect, useRef } from 'react';\nimport { createPortal } from 'react-dom';\nimport EVENT_TYPES from '../../constants/event-types';\nimport './result-preview.scss';\n\nconst ResultPreview = React.forwardRef(({ elements, clear }, parentRef) => {\n  const containerRef = useRef(null);\n\n  const handleClick = ({ target }) => {\n    if (!containerRef.current.contains(target)) {\n      clear();\n    }\n  };\n\n  useEffect(() => {\n    const handleKeyUp = ({ key }) => {\n      if (key === EVENT_TYPES.ESC) {\n        clear();\n      }\n    };\n\n    window.addEventListener('keyup', handleKeyUp, false);\n\n    return () => {\n      window.removeEventListener('keyup', handleKeyUp, false);\n    };\n  }, []);\n\n  return (elements?.length > 0 && parentRef?.current && createPortal((\n    <div className=\"result\" onClick={handleClick}>\n      <ul className='result__container' ref={containerRef}>\n        <div className=\"result__header\">\n          <span className='result__close' onClick={clear} tabIndex='1'>x</span>\n        </div>\n        {elements?.map(({ accuracy, person }, ind) => (\n          <li key={ind} className='result__element'>\n            <span className='result__person'>\n              <small>{ind + 1}</small>. {person}\n            </span>\n            <span className='result__accuracy'>{accuracy}%</span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  ), parentRef.current)) ?? null;\n});\n\nexport default ResultPreview;\n","import React, { useRef, useState } from 'react';\nimport superagent from 'superagent';\nimport Button from '../button/button';\nimport ImageEditor from '@toast-ui/react-image-editor';\nimport 'tui-image-editor/dist/tui-image-editor.css';\nimport './upload-image.scss';\nimport ResultPreview from '../result-preview/result-preview';\n\nfunction UploadImage({\n  serverUrl = '',\n}) {\n  const formRef = useRef(null);\n  const selectRef = useRef(null);\n  const imageEditorRef = useRef(null);\n  const [previews, setPreviews] = useState([]);\n  const [editingImage, setEditingImage] = useState(null);\n  const [results, setResults] = useState([]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    superagent\n      .post(serverUrl)\n      .send({ images: previews })\n      .then(res => setResults(res.body))\n      .catch(err => console.log(err));\n  };\n\n  const handleClick = () => {\n    selectRef.current?.click();\n  };\n\n  const handleChange = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    const { files } = event.dataTransfer || selectRef.current;\n    for (const file of files) {\n      if (file.type.startsWith('image/') && !previews.find(el => el.name === file.name)) {\n        const reader = new FileReader();\n\n        reader.addEventListener('load', ({ target: { result: image }}) => {\n          setPreviews(prevState => [...prevState, { image, name: file.name }]);\n        }, false);\n        reader.readAsDataURL(file);\n      }\n    }\n  };\n\n  const handleRemovePreview = (name) => {\n    setPreviews(prevState => prevState.filter(el => el.name !== name));\n  };\n\n  const handleSaveEditingImage = () => {\n    const { imageEditorInst } = imageEditorRef.current;\n    const data = imageEditorInst.toDataURL();\n    if (data) {\n      setPreviews(prevState => {\n        const changedImage = prevState.find(el => el.name === editingImage.name);\n        changedImage.image = data;\n        setEditingImage(null);\n        return [...prevState.filter(el => el !== editingImage), changedImage];\n      });\n    }\n  };\n\n  const handleDragOver = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n  };\n\n  const handleClearResults = () => setResults([]);\n\n  return (\n    <form\n      ref={formRef}\n      className=\"upload-image wrapper\"\n      name=\"upload-image\"\n      onSubmit={handleSubmit}\n      onDrop={handleChange}\n      onDragOver={handleDragOver}\n    >\n      <ResultPreview elements={results} ref={formRef} clear={handleClearResults} />\n      <div className=\"upload-image__controls\">\n        {editingImage && (\n          <Button\n            className=\"upload-image__preview-save\"\n            onClick={handleSaveEditingImage}\n          >\n            Сохранить\n          </Button>\n        )}\n        <div className=\"upload-image__select-container\">\n          <Button className=\"upload-image__select-button\" onClick={handleClick}>\n            Выбрать фотографии\n            <input\n              ref={selectRef}\n              className=\"hide\"\n              type=\"file\"\n              multiple\n              accept=\"image/jpeg\"\n              onChange={handleChange}\n            />\n          </Button>\n          <span>Или перетащите сюда файлы</span>\n        </div>\n        {previews.length > 0 && (\n          <Button type=\"submit\" className=\"upload-image__send-button\">\n            Отправить &#8594;\n          </Button>\n        )}\n      </div>\n      <div className=\"upload-image__content\">\n        <div className=\"upload-image__preview-container\">\n          {previews.map(({ name, image }) => (\n            <div key={name} className=\"upload-image__preview\">\n              <div className=\"upload-image__preview-controls\">\n                <Button\n                  className=\"upload-image__preview-edit\"\n                  onClick={() => setEditingImage(previews.find(el => el.name === name))}\n                >\n                  Изменить\n                </Button>\n                <Button\n                  className=\"upload-image__preview-remove\"\n                  onClick={() => handleRemovePreview(name)}\n                >\n                  X\n                </Button>\n              </div>\n              <img src={image} className=\"upload-image__preview-image\" alt=\"\" />\n              <span className=\"upload-image__preview-name\">{name}</span>\n            </div>\n          ))}\n        </div>\n        <div className=\"upload-image__editor\">\n          {editingImage && (\n            <ImageEditor\n              ref={imageEditorRef}\n              includeUI={{\n                loadImage: {\n                  path: editingImage.image,\n                  name: editingImage.name,\n                },\n                menu: ['crop', 'flip', 'rotate', 'filter'],\n              }}\n              usageStatistics={false}\n            />\n          )}\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default UploadImage;\n","import Header from '../header/header';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport UploadImage from '../upload-image/upload-image';\r\nimport { SERVER_URL } from '../../constants/core';\r\nimport './App.scss';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"app\">\r\n        <Header />\r\n        <UploadImage serverUrl={`${SERVER_URL}/api/images`} />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export const SERVER_URL = 'http://localhost:9000';\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}